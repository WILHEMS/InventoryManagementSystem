Index: InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/ReportController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.inventorymanagementservice.components.presentation.controllers;\r\n\r\nimport com.example.inventorymanagementservice.components.presentation.response_bodies.implementation.report.CustomerReportResponse;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.CrossOrigin;\r\nimport org.springframework.web.bind.annotation.RequestMapping;\r\nimport org.springframework.web.bind.annotation.RestController;\r\n\r\n\r\n@RestController\r\n@RequestMapping(value = {\"/report\"}, consumes = {\"application/json\"}, produces = {\"application/json\"})\r\n@CrossOrigin\r\npublic class ReportController {\r\n\r\n    public ResponseEntity<CustomerReportResponse> customerReport(){\r\n        return null;\r\n    }\r\n}\r\n
===================================================================
diff --git a/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/ReportController.java b/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/ReportController.java
--- a/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/ReportController.java	
+++ b/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/ReportController.java	
@@ -11,8 +11,8 @@
 @RequestMapping(value = {"/report"}, consumes = {"application/json"}, produces = {"application/json"})
 @CrossOrigin
 public class ReportController {
-
     public ResponseEntity<CustomerReportResponse> customerReport(){
         return null;
     }
+
 }
Index: InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/UserController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.inventorymanagementservice.components.presentation.controllers;\r\n\r\nimport com.example.inventorymanagementservice.components.business.services.UserManagementService;\r\nimport com.example.inventorymanagementservice.components.presentation.response_bodies.implementation.user.*;\r\nimport com.example.inventorymanagementservice.components.presentation.response_bodies.interfaces.UserResponse;\r\nimport com.example.inventorymanagementservice.components.persistence.entities.User;\r\nimport com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserDeleteRequestBody;\r\nimport com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserLoginRequestBody;\r\nimport com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserUpdateRequestBody;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\n\r\n@RestController\r\npublic class UserController {\r\n\r\n    private UserManagementService userManagementService;\r\n\r\n    public UserController(UserManagementService userManagementService) {\r\n        this.userManagementService = userManagementService;\r\n    }\r\n\r\n    /**\r\n     * Register a user.\r\n     * The request body must contain the following properties;\r\n     * <em>username</em> - the username of the user.\r\n     * <em>first_name</em> - the first name of the user.\r\n     * <em>last_name</em> - the last name of the user.\r\n     * <em>role</em> - the role of the user.\r\n     * <em>street</em> - the street address.\r\n     * <em>city</em> - the city address.\r\n     * <em>country</em> - the country address.\r\n     * <em>password</em> - the user password.\r\n     * <em>profile_picture</em> - The profile picture of the user as bytes.\r\n     * @param requestBody the body of the request.*/\r\n    @PostMapping(value = \"user/register\", consumes = {\"application/json\", \"application/octet-stream\"}, produces = {\r\n            \"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.POST})\r\n    public ResponseEntity<UserRegistrationResponse> register(@RequestBody User requestBody){\r\n\r\n        UserRegistrationResponse registrationResponse = new UserRegistrationResponse();\r\n\r\n        if (!userManagementService.register(requestBody)){\r\n            registrationResponse.setMessage(\"user exists\");\r\n            return new ResponseEntity<>(registrationResponse, HttpStatus.OK);\r\n        }\r\n\r\n        registrationResponse.setMessage(\"accepted\");\r\n        return new ResponseEntity<>(registrationResponse, HttpStatus.OK);\r\n    }\r\n\r\n\r\n    /**\r\n     * User login.\r\n     * The Request body must contain the properties;\r\n     * <em>username</em> - the username of the user.\r\n     * <em>password</em> - the password of the user.\r\n     * @param requestBody the body of the request.*/\r\n    /*allowed exposed endpoint and request method*/\r\n    @PostMapping(value = \"user/login\", consumes = {\"application/json\", \"plain/text\"}, produces = {\"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.POST})\r\n    public ResponseEntity<UserLoginResponse> login(@RequestBody UserLoginRequestBody requestBody){\r\n\r\n        UserLoginResponse loginResponse= new UserLoginResponse();\r\n        User user = userManagementService.login(requestBody);\r\n\r\n        if (user == null){\r\n\r\n            loginResponse.setMessage(\"no such user\");\r\n            loginResponse.setUser(null);\r\n            return new ResponseEntity<>(loginResponse, HttpStatus.OK);\r\n\r\n        }\r\n\r\n        loginResponse.setMessage(\"success\");\r\n        loginResponse.setUser(user);\r\n        return new ResponseEntity<>(loginResponse, HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(value = \"user/fetch\", consumes = {\"application/json\", \"text/plain\"}, produces = {\"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.GET})\r\n    public ResponseEntity<UserFetchResponse> fetch(@RequestParam(value = \"username\") String username){\r\n        UserFetchResponse fetchResponse = new UserFetchResponse();\r\n        User user = userManagementService.fetch(username);\r\n\r\n        if (user == null){\r\n\r\n            fetchResponse.setMessage(\"no such user\");\r\n            fetchResponse.setUser(null);\r\n\r\n            return new ResponseEntity<>(fetchResponse, HttpStatus.OK);\r\n        }\r\n\r\n        fetchResponse.setMessage(\"found\");\r\n        fetchResponse.setUser(user);\r\n\r\n        return new ResponseEntity<>(fetchResponse, HttpStatus.OK);\r\n    }\r\n\r\n    @PutMapping(value = \"user/update\", consumes = {\"application/json\", \"text/plain\"}, produces = {\"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.PUT})\r\n    public ResponseEntity<UserUpdateResponse> update(@RequestBody UserUpdateRequestBody requestBody){\r\n\r\n        UserUpdateResponse updateResponse = new UserUpdateResponse();\r\n\r\n        User user = this.userManagementService.update(requestBody);\r\n\r\n        if (user == null){\r\n\r\n            updateResponse.setMessage(\"attempt failed, please check your credentials\");\r\n            updateResponse.setUser(null);\r\n            return new ResponseEntity<>(updateResponse, HttpStatus.OK);\r\n        }\r\n\r\n        updateResponse.setMessage(\"successful\");\r\n        updateResponse.setUser(user);\r\n\r\n        return new ResponseEntity<>(updateResponse, HttpStatus.OK);\r\n    }\r\n\r\n    @DeleteMapping(value = \"user/delete\", consumes = {\"application/json\", \"text/plain\"}, produces = {\"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.DELETE})\r\n    public ResponseEntity<UserDeleteResponse> delete(@RequestBody UserDeleteRequestBody requestBody){\r\n\r\n        UserDeleteResponse response = new UserDeleteResponse();\r\n\r\n        if (!this.userManagementService.delete(requestBody)){\r\n\r\n            response.setMessage(\"failed to delete\");\r\n            return new ResponseEntity<>(response, HttpStatus.OK);\r\n        }\r\n\r\n        response.setMessage(\"successfully deleted\");\r\n        return new ResponseEntity<>(response, HttpStatus.OK);\r\n    }\r\n\r\n    @GetMapping(value = {\"/user\"}, consumes = {\"application/json\", \"text/plain\"}, produces = {\"application/json\"})\r\n    @CrossOrigin(methods = {RequestMethod.GET})\r\n    public ResponseEntity<UserResponse> getUsers(){\r\n\r\n        /*define the response*/\r\n        Users userResponse = new Users();\r\n\r\n        /*get all users and add them to the response*/\r\n        userResponse.setUsers(this.userManagementService.users());\r\n\r\n        /*set the message*/\r\n        userResponse.setMessage(\"found %s\".formatted(userResponse.getUsers().size()));\r\n\r\n        /*return the response*/\r\n        return new ResponseEntity<>(userResponse, HttpStatus.OK);\r\n\r\n    }\r\n}\r\n
===================================================================
diff --git a/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/UserController.java b/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/UserController.java
--- a/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/UserController.java	
+++ b/InventoryManagementService/src/main/java/com/example/inventorymanagementservice/components/presentation/controllers/UserController.java	
@@ -1,5 +1,6 @@
 package com.example.inventorymanagementservice.components.presentation.controllers;
 
+import com.example.inventorymanagementservice.components.business.services.ReportService;
 import com.example.inventorymanagementservice.components.business.services.UserManagementService;
 import com.example.inventorymanagementservice.components.presentation.response_bodies.implementation.user.*;
 import com.example.inventorymanagementservice.components.presentation.response_bodies.interfaces.UserResponse;
@@ -7,18 +8,25 @@
 import com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserDeleteRequestBody;
 import com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserLoginRequestBody;
 import com.example.inventorymanagementservice.components.presentation.request_bodies.user.UserUpdateRequestBody;
+import net.sf.jasperreports.engine.JRException;
+import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
 
+import java.io.FileNotFoundException;
+
 
 @RestController
 public class UserController {
 
     private UserManagementService userManagementService;
+    @Autowired
+    private ReportService reportService;
 
-    public UserController(UserManagementService userManagementService) {
+    public UserController(UserManagementService userManagementService, ReportService reportService) {
         this.userManagementService = userManagementService;
+        this.reportService = reportService;
     }
 
     /**
@@ -152,4 +160,14 @@
         return new ResponseEntity<>(userResponse, HttpStatus.OK);
 
     }
+    /**
+     * User Jasper Report.
+     * The Request body must contain the properties;
+     * report format - the format of the report to be generated either html or pdf.
+     * @param pathVariable - the body of the request.*/
+    @GetMapping("/report/{format}")
+    public String generatedReport (@PathVariable String format) throws JRException, FileNotFoundException {
+        return reportService.exportUserReport(format);
+    }
+
 }
Index: InventoryManagementService/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#the system environment settings\r\n\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/imsproject\r\nspring.datasource.username=root\r\nspring.datasource.password=conn3ct2022!\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
===================================================================
diff --git a/InventoryManagementService/src/main/resources/application.properties b/InventoryManagementService/src/main/resources/application.properties
--- a/InventoryManagementService/src/main/resources/application.properties	
+++ b/InventoryManagementService/src/main/resources/application.properties	
@@ -3,6 +3,6 @@
 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 spring.datasource.url=jdbc:mysql://localhost:3306/imsproject
 spring.datasource.username=root
-spring.datasource.password=conn3ct2022!
+spring.datasource.password=Vision@2030
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
\ No newline at end of file
Index: InventoryManagementService/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <parent>\r\n        <groupId>org.springframework.boot</groupId>\r\n        <artifactId>spring-boot-starter-parent</artifactId>\r\n        <version>3.1.3</version>\r\n        <relativePath/> <!-- lookup parent from repository -->\r\n    </parent>\r\n    <artifactId>InventoryManagementService</artifactId>\r\n    <groupId>com.example</groupId>\r\n    <version>0.0.1-SNAPSHOT</version>\r\n    <name>InventoryManagementService</name>\r\n    <description>InventoryManagementService</description>\r\n    <properties>\r\n        <java.version>17</java.version>\r\n    </properties>\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n<!--        <dependency>-->\r\n<!--            <groupId>org.springframework.boot</groupId>-->\r\n<!--            <artifactId>spring-boot-starter-log4j2</artifactId>-->\r\n<!--        </dependency>-->\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-api</artifactId>\r\n            <version>0.11.2</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-impl</artifactId>\r\n            <version>0.11.2</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.jsonwebtoken</groupId>\r\n            <artifactId>jjwt-jackson</artifactId>\r\n            <version>0.11.2</version>\r\n            <scope>runtime</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>commons-dbcp</groupId>\r\n            <artifactId>commons-dbcp</artifactId>\r\n            <version>1.4</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springdoc</groupId>\r\n            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>\r\n            <version>2.1.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-core</artifactId>\r\n            <version>5.2.0</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-webflux</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>javax.servlet-api</artifactId>\r\n            <version>4.0.1</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>log4j</groupId>\r\n            <artifactId>log4j</artifactId>\r\n            <version>1.2.17</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.docx4j</groupId>\r\n            <artifactId>docx4j</artifactId>\r\n            <version>6.1.2</version>\r\n        <exclusions>\r\n            <exclusion>\r\n                <groupId>org.slf4j</groupId>\r\n                <artifactId>slf4j-log4j12</artifactId>\r\n            </exclusion>\r\n            <exclusion>\r\n                <groupId>log4j</groupId>\r\n                <artifactId>log4j</artifactId>\r\n            </exclusion>\r\n        </exclusions>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>junit</groupId>\r\n            <artifactId>junit</artifactId>\r\n            <version>4.13.2</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.mockito</groupId>\r\n            <artifactId>mockito-core</artifactId>\r\n            <version>5.2.0</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger2</artifactId>\r\n            <version>3.0.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.springfox</groupId>\r\n            <artifactId>springfox-swagger-ui</artifactId>\r\n            <version>3.0.0</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-web</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-webflux</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-actuator</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-rest</artifactId>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-devtools</artifactId>\r\n            <scope>runtime</scope>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.mysql</groupId>\r\n            <artifactId>mysql-connector-j</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-web</artifactId>\r\n            <version>6.0.9</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework</groupId>\r\n            <artifactId>spring-webmvc</artifactId>\r\n            <version>6.0.9</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.hibernate.orm</groupId>\r\n            <artifactId>hibernate-core</artifactId>\r\n        </dependency>\r\n<!--        <dependency>-->\r\n<!--            <groupId>org.hibernate</groupId>-->\r\n<!--            <artifactId>hibernate-core</artifactId>-->\r\n<!--        </dependency>-->\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.springframework.boot</groupId>\r\n                <artifactId>spring-boot-maven-plugin</artifactId>\r\n                <configuration>\r\n                    <excludes>\r\n                        <exclude>\r\n                            <groupId>org.projectlombok</groupId>\r\n                            <artifactId>lombok</artifactId>\r\n                        </exclude>\r\n                    </excludes>\r\n                </configuration>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n\r\n</project>\r\n
===================================================================
diff --git a/InventoryManagementService/pom.xml b/InventoryManagementService/pom.xml
--- a/InventoryManagementService/pom.xml	
+++ b/InventoryManagementService/pom.xml	
@@ -175,6 +175,13 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-data-jpa</artifactId>
         </dependency>
+        <!-- https://mvnrepository.com/artifact/net.sf.jasperreports/jasperreports -->
+        <dependency>
+            <groupId>net.sf.jasperreports</groupId>
+            <artifactId>jasperreports</artifactId>
+            <version>6.20.6</version>
+        </dependency>
+
     </dependencies>
 
     <build>
@@ -190,6 +197,11 @@
                         </exclude>
                     </excludes>
                 </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-site-plugin</artifactId>
+                <version>3.9.1</version>
             </plugin>
         </plugins>
     </build>
Index: InventoryManagementService/target/classes/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#the system environment settings\r\n\r\nspring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver\r\nspring.datasource.url=jdbc:mysql://localhost:3306/imsproject\r\nspring.datasource.username=root\r\nspring.datasource.password=conn3ct2022!\r\nspring.jpa.hibernate.ddl-auto=update\r\nspring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
===================================================================
diff --git a/InventoryManagementService/target/classes/application.properties b/InventoryManagementService/target/classes/application.properties
--- a/InventoryManagementService/target/classes/application.properties	
+++ b/InventoryManagementService/target/classes/application.properties	
@@ -3,6 +3,6 @@
 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
 spring.datasource.url=jdbc:mysql://localhost:3306/imsproject
 spring.datasource.username=root
-spring.datasource.password=conn3ct2022!
+spring.datasource.password=Vision@2030
 spring.jpa.hibernate.ddl-auto=update
 spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"CompilerConfiguration\">\r\n    <annotationProcessing>\r\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\r\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\r\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\r\n        <outputRelativeToContentRoot value=\"true\" />\r\n        <module name=\"InventoryManagementService\" />\r\n      </profile>\r\n    </annotationProcessing>\r\n  </component>\r\n  <component name=\"JavacSettings\">\r\n    <option name=\"ADDITIONAL_OPTIONS_OVERRIDE\">\r\n      <module name=\"InventoryManagementService\" options=\"-parameters\" />\r\n    </option>\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
--- a/.idea/compiler.xml	
+++ b/.idea/compiler.xml	
@@ -2,6 +2,7 @@
 <project version="4">
   <component name="CompilerConfiguration">
     <annotationProcessing>
+      <profile default="true" name="Default" enabled="true" />
       <profile name="Maven default annotation processors profile" enabled="true">
         <sourceOutputDir name="target/generated-sources/annotations" />
         <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
